{"ast":null,"code":"var _jsxFileName = \"/Users/brianzollinhofer/Documents/Scheduling Project/school_scheduler/frontend/src/components/CourseManagement.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Card, CardContent, Typography, List, ListItem, ListItemText, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, TextField, Alert } from '@mui/material';\nimport { Add as AddIcon, Delete as DeleteIcon } from '@mui/icons-material';\nimport axios from 'axios';\n\n// Configure axios instance with base URL\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst api = axios.create({\n  baseURL: 'http://localhost:8000',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const CourseManagement = () => {\n  _s();\n  const [courses, setCourses] = useState([]);\n  const [groups, setGroups] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [newGroupName, setNewGroupName] = useState('');\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchCourses();\n    fetchGroups();\n  }, []);\n  const fetchCourses = async () => {\n    try {\n      console.log('Fetching courses...');\n      const response = await api.get('/scheduler/courses/');\n      console.log('Courses response:', response.data);\n      setCourses(response.data.courses);\n    } catch (err) {\n      setError('Failed to fetch courses');\n      console.error('Error fetching courses:', err);\n      if (axios.isAxiosError(err)) {\n        var _err$response, _err$response2, _err$response3;\n        console.error('Axios error details:', {\n          message: err.message,\n          response: (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data,\n          status: (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status,\n          headers: (_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.headers\n        });\n      }\n    }\n  };\n  const fetchGroups = async () => {\n    try {\n      console.log('Fetching groups...');\n      const response = await api.get('/scheduler/course-groups/');\n      console.log('Groups response:', response.data);\n      setGroups(response.data.groups);\n    } catch (err) {\n      setError('Failed to fetch course groups');\n      console.error('Error fetching groups:', err);\n      if (axios.isAxiosError(err)) {\n        var _err$response4, _err$response5, _err$response6;\n        console.error('Axios error details:', {\n          message: err.message,\n          response: (_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.data,\n          status: (_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : _err$response5.status,\n          headers: (_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : _err$response6.headers\n        });\n      }\n    }\n  };\n  const handleCreateGroup = async () => {\n    try {\n      await api.post('/scheduler/course-groups/', {\n        name: newGroupName\n      });\n      setDialogOpen(false);\n      setNewGroupName('');\n      fetchGroups();\n    } catch (err) {\n      setError('Failed to create group');\n      console.error('Error creating group:', err);\n    }\n  };\n  const handleDeleteGroup = async groupId => {\n    try {\n      await api.delete(`/scheduler/course-groups/${groupId}/`);\n      fetchGroups();\n    } catch (err) {\n      setError('Failed to delete group');\n      console.error('Error deleting group:', err);\n    }\n  };\n  const handleAddCourseToGroup = async (courseId, groupId) => {\n    try {\n      // Find the current group and its courses\n      const currentGroup = groups.find(g => g.id === groupId);\n      if (!currentGroup) {\n        throw new Error('Group not found');\n      }\n\n      // Create array of all course IDs (existing + new)\n      const updatedCourseIds = [...currentGroup.courses.map(c => c.id), courseId];\n\n      // Send the complete list of course IDs\n      await api.post(`/scheduler/course-groups/${groupId}/`, {\n        course_ids: updatedCourseIds\n      });\n\n      // Find the course being added\n      const courseToAdd = courses.find(c => c.id === courseId);\n      if (courseToAdd) {\n        // Update the selected group immediately\n        const updatedGroup = {\n          ...currentGroup,\n          courses: [...currentGroup.courses, courseToAdd]\n        };\n        setSelectedGroup(updatedGroup);\n\n        // Update the groups list\n        setGroups(prevGroups => prevGroups.map(g => g.id === groupId ? updatedGroup : g));\n      }\n    } catch (err) {\n      setError('Failed to add course to group');\n      console.error('Error adding course to group:', err);\n      // Refresh groups from server in case of error\n      fetchGroups();\n    }\n  };\n  const handleRemoveCourseFromGroup = async (courseId, groupId) => {\n    try {\n      // Find the current group and its courses\n      const currentGroup = groups.find(g => g.id === groupId);\n      if (!currentGroup) {\n        throw new Error('Group not found');\n      }\n\n      // Filter out the course to remove\n      const updatedCourseIds = currentGroup.courses.map(c => c.id).filter(id => id !== courseId);\n\n      // Send the updated list of course IDs\n      await api.post(`/scheduler/course-groups/${groupId}/`, {\n        course_ids: updatedCourseIds\n      });\n\n      // Update the selected group immediately\n      const updatedGroup = {\n        ...currentGroup,\n        courses: currentGroup.courses.filter(c => c.id !== courseId)\n      };\n      setSelectedGroup(updatedGroup);\n\n      // Update the groups list\n      setGroups(prevGroups => prevGroups.map(g => g.id === groupId ? updatedGroup : g));\n    } catch (err) {\n      setError('Failed to remove course from group');\n      console.error('Error removing course from group:', err);\n      // Refresh groups from server in case of error\n      fetchGroups();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Course Exclusivity Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      onClose: () => setError(null),\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          minWidth: 300\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Course Groups\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => setDialogOpen(true),\n              children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: groups.map(group => /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              selected: (selectedGroup === null || selectedGroup === void 0 ? void 0 : selectedGroup.id) === group.id,\n              onClick: () => setSelectedGroup(group),\n              secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                onClick: () => handleDeleteGroup(group.id),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: group.name,\n                secondary: `${group.courses.length} courses: ${group.courses.map(c => c.code).join(', ')}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this)\n            }, group.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: selectedGroup ? `Courses in ${selectedGroup.name}` : 'All Courses'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), selectedGroup && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              color: \"text.secondary\",\n              children: \"Current group courses:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mb: 2\n              },\n              children: selectedGroup.courses.length > 0 ? selectedGroup.courses.map(c => c.name).join(', ') : 'No courses in this group yet'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: courses.map(course => {\n              const isInSelectedGroup = selectedGroup === null || selectedGroup === void 0 ? void 0 : selectedGroup.courses.some(c => c.id === course.id);\n              return /*#__PURE__*/_jsxDEV(ListItem, {\n                secondaryAction: selectedGroup && (isInSelectedGroup ? /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"error\",\n                  onClick: () => handleRemoveCourseFromGroup(course.id, selectedGroup.id),\n                  children: \"Remove from Group\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  color: \"primary\",\n                  onClick: () => handleAddCourseToGroup(course.id, selectedGroup.id),\n                  children: \"Add to Group\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 27\n                }, this)),\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: course.name,\n                  secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [`${course.code} - Grade ${course.grade_level}`, isInSelectedGroup && /*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"span\",\n                      color: \"primary\",\n                      children: ' • In current group'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 21\n                }, this)\n              }, course.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: dialogOpen,\n      onClose: () => setDialogOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Create New Course Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          label: \"Group Name\",\n          fullWidth: true,\n          value: newGroupName,\n          onChange: e => setNewGroupName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setDialogOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCreateGroup,\n          variant: \"contained\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n_s(CourseManagement, \"d5tvFy+1alQBOnY3Yz7qBYTA3hY=\");\n_c = CourseManagement;\nvar _c;\n$RefreshReg$(_c, \"CourseManagement\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Card","CardContent","Typography","List","ListItem","ListItemText","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","TextField","Alert","Add","AddIcon","Delete","DeleteIcon","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","api","create","baseURL","headers","CourseManagement","_s","courses","setCourses","groups","setGroups","selectedGroup","setSelectedGroup","dialogOpen","setDialogOpen","newGroupName","setNewGroupName","error","setError","fetchCourses","fetchGroups","console","log","response","get","data","err","isAxiosError","_err$response","_err$response2","_err$response3","message","status","_err$response4","_err$response5","_err$response6","handleCreateGroup","post","name","handleDeleteGroup","groupId","delete","handleAddCourseToGroup","courseId","currentGroup","find","g","id","Error","updatedCourseIds","map","c","course_ids","courseToAdd","updatedGroup","prevGroups","handleRemoveCourseFromGroup","filter","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","severity","mb","onClose","display","gap","minWidth","justifyContent","alignItems","onClick","group","button","selected","secondaryAction","edge","primary","secondary","length","code","join","flex","color","course","isInSelectedGroup","some","grade_level","component","open","autoFocus","margin","label","fullWidth","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/brianzollinhofer/Documents/Scheduling Project/school_scheduler/frontend/src/components/CourseManagement.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Alert,\n} from '@mui/material';\nimport { Add as AddIcon, Delete as DeleteIcon } from '@mui/icons-material';\nimport axios from 'axios';\n\n// Configure axios instance with base URL\nconst api = axios.create({\n  baseURL: 'http://localhost:8000',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\ninterface Course {\n  id: number;\n  name: string;\n  code: string;\n  grade_level: number;\n  exclusivity_group?: number;\n}\n\ninterface CourseGroup {\n  id: number;\n  name: string;\n  courses: Course[];\n}\n\nexport const CourseManagement: React.FC = () => {\n  const [courses, setCourses] = useState<Course[]>([]);\n  const [groups, setGroups] = useState<CourseGroup[]>([]);\n  const [selectedGroup, setSelectedGroup] = useState<CourseGroup | null>(null);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [newGroupName, setNewGroupName] = useState('');\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    fetchCourses();\n    fetchGroups();\n  }, []);\n\n  const fetchCourses = async () => {\n    try {\n      console.log('Fetching courses...');\n      const response = await api.get('/scheduler/courses/');\n      console.log('Courses response:', response.data);\n      setCourses(response.data.courses);\n    } catch (err) {\n      setError('Failed to fetch courses');\n      console.error('Error fetching courses:', err);\n      if (axios.isAxiosError(err)) {\n        console.error('Axios error details:', {\n          message: err.message,\n          response: err.response?.data,\n          status: err.response?.status,\n          headers: err.response?.headers\n        });\n      }\n    }\n  };\n\n  const fetchGroups = async () => {\n    try {\n      console.log('Fetching groups...');\n      const response = await api.get('/scheduler/course-groups/');\n      console.log('Groups response:', response.data);\n      setGroups(response.data.groups);\n    } catch (err) {\n      setError('Failed to fetch course groups');\n      console.error('Error fetching groups:', err);\n      if (axios.isAxiosError(err)) {\n        console.error('Axios error details:', {\n          message: err.message,\n          response: err.response?.data,\n          status: err.response?.status,\n          headers: err.response?.headers\n        });\n      }\n    }\n  };\n\n  const handleCreateGroup = async () => {\n    try {\n      await api.post('/scheduler/course-groups/', {\n        name: newGroupName,\n      });\n      setDialogOpen(false);\n      setNewGroupName('');\n      fetchGroups();\n    } catch (err) {\n      setError('Failed to create group');\n      console.error('Error creating group:', err);\n    }\n  };\n\n  const handleDeleteGroup = async (groupId: number) => {\n    try {\n      await api.delete(`/scheduler/course-groups/${groupId}/`);\n      fetchGroups();\n    } catch (err) {\n      setError('Failed to delete group');\n      console.error('Error deleting group:', err);\n    }\n  };\n\n  const handleAddCourseToGroup = async (courseId: number, groupId: number) => {\n    try {\n      // Find the current group and its courses\n      const currentGroup = groups.find(g => g.id === groupId);\n      if (!currentGroup) {\n        throw new Error('Group not found');\n      }\n      \n      // Create array of all course IDs (existing + new)\n      const updatedCourseIds = [...currentGroup.courses.map(c => c.id), courseId];\n      \n      // Send the complete list of course IDs\n      await api.post(`/scheduler/course-groups/${groupId}/`, {\n        course_ids: updatedCourseIds,\n      });\n\n      // Find the course being added\n      const courseToAdd = courses.find(c => c.id === courseId);\n      if (courseToAdd) {\n        // Update the selected group immediately\n        const updatedGroup = {\n          ...currentGroup,\n          courses: [...currentGroup.courses, courseToAdd]\n        };\n        setSelectedGroup(updatedGroup);\n        \n        // Update the groups list\n        setGroups(prevGroups => \n          prevGroups.map(g => \n            g.id === groupId ? updatedGroup : g\n          )\n        );\n      }\n    } catch (err) {\n      setError('Failed to add course to group');\n      console.error('Error adding course to group:', err);\n      // Refresh groups from server in case of error\n      fetchGroups();\n    }\n  };\n\n  const handleRemoveCourseFromGroup = async (courseId: number, groupId: number) => {\n    try {\n      // Find the current group and its courses\n      const currentGroup = groups.find(g => g.id === groupId);\n      if (!currentGroup) {\n        throw new Error('Group not found');\n      }\n      \n      // Filter out the course to remove\n      const updatedCourseIds = currentGroup.courses\n        .map(c => c.id)\n        .filter(id => id !== courseId);\n      \n      // Send the updated list of course IDs\n      await api.post(`/scheduler/course-groups/${groupId}/`, {\n        course_ids: updatedCourseIds,\n      });\n\n      // Update the selected group immediately\n      const updatedGroup = {\n        ...currentGroup,\n        courses: currentGroup.courses.filter(c => c.id !== courseId)\n      };\n      setSelectedGroup(updatedGroup);\n      \n      // Update the groups list\n      setGroups(prevGroups => \n        prevGroups.map(g => \n          g.id === groupId ? updatedGroup : g\n        )\n      );\n    } catch (err) {\n      setError('Failed to remove course from group');\n      console.error('Error removing course from group:', err);\n      // Refresh groups from server in case of error\n      fetchGroups();\n    }\n  };\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Course Exclusivity Management\n      </Typography>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }} onClose={() => setError(null)}>\n          {error}\n        </Alert>\n      )}\n\n      <Box sx={{ display: 'flex', gap: 2 }}>\n        {/* Course Groups List */}\n        <Card sx={{ minWidth: 300 }}>\n          <CardContent>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <Typography variant=\"h6\">Course Groups</Typography>\n              <IconButton onClick={() => setDialogOpen(true)}>\n                <AddIcon />\n              </IconButton>\n            </Box>\n            <List>\n              {groups.map((group) => (\n                <ListItem\n                  key={group.id}\n                  button\n                  selected={selectedGroup?.id === group.id}\n                  onClick={() => setSelectedGroup(group)}\n                  secondaryAction={\n                    <IconButton edge=\"end\" onClick={() => handleDeleteGroup(group.id)}>\n                      <DeleteIcon />\n                    </IconButton>\n                  }\n                >\n                  <ListItemText\n                    primary={group.name}\n                    secondary={`${group.courses.length} courses: ${group.courses.map(c => c.code).join(', ')}`}\n                  />\n                </ListItem>\n              ))}\n            </List>\n          </CardContent>\n        </Card>\n\n        {/* Course List */}\n        <Card sx={{ flex: 1 }}>\n          <CardContent>\n            <Typography variant=\"h6\" gutterBottom>\n              {selectedGroup ? `Courses in ${selectedGroup.name}` : 'All Courses'}\n            </Typography>\n            {selectedGroup && (\n              <Box sx={{ mb: 2 }}>\n                <Typography variant=\"subtitle2\" color=\"text.secondary\">\n                  Current group courses:\n                </Typography>\n                <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                  {selectedGroup.courses.length > 0 \n                    ? selectedGroup.courses.map(c => c.name).join(', ')\n                    : 'No courses in this group yet'}\n                </Typography>\n              </Box>\n            )}\n            <List>\n              {courses.map((course) => {\n                const isInSelectedGroup = selectedGroup?.courses.some(c => c.id === course.id);\n                return (\n                  <ListItem\n                    key={course.id}\n                    secondaryAction={\n                      selectedGroup && (\n                        isInSelectedGroup ? (\n                          <Button\n                            variant=\"outlined\"\n                            color=\"error\"\n                            onClick={() => handleRemoveCourseFromGroup(course.id, selectedGroup.id)}\n                          >\n                            Remove from Group\n                          </Button>\n                        ) : (\n                          <Button\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            onClick={() => handleAddCourseToGroup(course.id, selectedGroup.id)}\n                          >\n                            Add to Group\n                          </Button>\n                        )\n                      )\n                    }\n                  >\n                    <ListItemText\n                      primary={course.name}\n                      secondary={\n                        <>\n                          {`${course.code} - Grade ${course.grade_level}`}\n                          {isInSelectedGroup && (\n                            <Typography component=\"span\" color=\"primary\">\n                              {' • In current group'}\n                            </Typography>\n                          )}\n                        </>\n                      }\n                    />\n                  </ListItem>\n                );\n              })}\n            </List>\n          </CardContent>\n        </Card>\n      </Box>\n\n      {/* New Group Dialog */}\n      <Dialog open={dialogOpen} onClose={() => setDialogOpen(false)}>\n        <DialogTitle>Create New Course Group</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Group Name\"\n            fullWidth\n            value={newGroupName}\n            onChange={(e) => setNewGroupName(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setDialogOpen(false)}>Cancel</Button>\n          <Button onClick={handleCreateGroup} variant=\"contained\">\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}