# Generated by Django 4.2.20 on 2025-03-11 19:18

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('scheduler', '0002_schedulingconfiguration_course_course_type_and_more'),
    ]

    operations = [
        migrations.RenameField(
            model_name='schedulingconfiguration',
            old_name='schedule_electives_together',
            new_name='group_electives_together',
        ),
        migrations.RemoveField(
            model_name='schedulingconfiguration',
            name='allow_teacher_multiple_rooms',
        ),
        migrations.RemoveField(
            model_name='schedulingconfiguration',
            name='elective_grade_levels',
        ),
        migrations.RemoveField(
            model_name='schedulingconfiguration',
            name='preferred_core_subject_periods',
        ),
        migrations.RemoveField(
            model_name='schedulingconfiguration',
            name='require_subject_specific_rooms',
        ),
        migrations.AddField(
            model_name='schedulingconfiguration',
            name='allow_mixed_grade_electives',
            field=models.BooleanField(default=False, help_text='Allow students from different grades in the same elective classes'),
        ),
        migrations.AddField(
            model_name='schedulingconfiguration',
            name='allow_split_courses',
            field=models.BooleanField(default=False, help_text='Allow courses to be split across different periods (for multiple sections)'),
        ),
        migrations.AddField(
            model_name='schedulingconfiguration',
            name='consider_teacher_prep_periods',
            field=models.BooleanField(default=True, help_text='Ensure teachers get prep periods'),
        ),
        migrations.AddField(
            model_name='schedulingconfiguration',
            name='keep_teachers_in_same_room',
            field=models.BooleanField(default=True, help_text='Teachers should stay in the same room all day when possible'),
        ),
        migrations.AddField(
            model_name='schedulingconfiguration',
            name='limit_consecutive_periods',
            field=models.BooleanField(default=True, help_text='Limit how many periods in a row a teacher can teach'),
        ),
        migrations.AddField(
            model_name='schedulingconfiguration',
            name='prioritize_core_subjects_in_morning',
            field=models.BooleanField(default=True, help_text='Try to schedule core subjects in morning periods'),
        ),
        migrations.AddField(
            model_name='schedulingconfiguration',
            name='require_art_room_for_art',
            field=models.BooleanField(default=True, help_text='Require art classes to be in art room'),
        ),
        migrations.AddField(
            model_name='schedulingconfiguration',
            name='require_gym_for_pe',
            field=models.BooleanField(default=True, help_text='Require PE classes to be in gym'),
        ),
        migrations.AddField(
            model_name='schedulingconfiguration',
            name='require_science_labs_for_science',
            field=models.BooleanField(default=True, help_text='Require science classes to be in lab rooms'),
        ),
        migrations.AlterField(
            model_name='schedulingconfiguration',
            name='custom_rules',
            field=models.JSONField(blank=True, default=dict, help_text='Additional custom scheduling rules in JSON format'),
        ),
        migrations.AlterField(
            model_name='schedulingconfiguration',
            name='max_consecutive_periods',
            field=models.IntegerField(default=3, help_text='Maximum number of consecutive periods if limit is enabled'),
        ),
        migrations.AlterField(
            model_name='schedulingconfiguration',
            name='stagger_grade_level_lunches',
            field=models.BooleanField(default=True, help_text='Schedule different grade levels for different lunch periods'),
        ),
    ]
