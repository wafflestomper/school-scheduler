# Generated by Django 4.2.20 on 2025-03-13 02:08

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('scheduler', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(max_length=20)),
                ('year', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='StudentPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preference_level', models.IntegerField(choices=[(1, 'First Choice'), (2, 'Second Choice'), (3, 'Third Choice')])),
                ('semester', models.CharField(max_length=20)),
                ('year', models.IntegerField()),
            ],
            options={
                'ordering': ['student', 'preference_level'],
            },
        ),
        migrations.AlterModelOptions(
            name='course',
            options={'ordering': ['grade_level', 'name'], 'verbose_name': 'Course', 'verbose_name_plural': 'Courses'},
        ),
        migrations.AlterModelOptions(
            name='period',
            options={'ordering': ['start_time'], 'verbose_name': 'Period', 'verbose_name_plural': 'Periods'},
        ),
        migrations.AlterModelOptions(
            name='section',
            options={'ordering': ['course', 'section_number'], 'verbose_name': 'Section', 'verbose_name_plural': 'Sections'},
        ),
        migrations.AlterField(
            model_name='course',
            name='code',
            field=models.CharField(blank=True, db_index=True, help_text='Simple course code (e.g., ENG7)', max_length=20, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='course',
            name='course_type',
            field=models.CharField(choices=[('CORE', 'Core'), ('ELECTIVE', 'Elective')], db_index=True, default='CORE', help_text='Type of course (CORE or ELECTIVE)', max_length=10),
        ),
        migrations.AlterField(
            model_name='course',
            name='description',
            field=models.TextField(blank=True, help_text='Detailed description of the course'),
        ),
        migrations.AlterField(
            model_name='course',
            name='duration',
            field=models.CharField(choices=[('QUARTER', 'Quarter'), ('TRIMESTER', 'Trimester'), ('YEAR', 'Full Year')], db_index=True, default='TRIMESTER', help_text='Duration of the course (YEAR, TRIMESTER, QUARTER)', max_length=10),
        ),
        migrations.AlterField(
            model_name='course',
            name='grade_level',
            field=models.IntegerField(db_index=True, help_text='Grade level for which this course is intended'),
        ),
        migrations.AlterField(
            model_name='course',
            name='max_students_per_section',
            field=models.IntegerField(default=30, help_text='Maximum number of students per section', validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='course',
            name='name',
            field=models.CharField(db_index=True, help_text='Full name of the course', max_length=100),
        ),
        migrations.AlterField(
            model_name='course',
            name='num_sections',
            field=models.IntegerField(default=1, help_text='Number of sections to be offered for this course', validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='period',
            name='end_time',
            field=models.TimeField(db_index=True, help_text='End time of the period'),
        ),
        migrations.AlterField(
            model_name='period',
            name='name',
            field=models.CharField(db_index=True, help_text='Unique name/number for the period', max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='period',
            name='start_time',
            field=models.TimeField(db_index=True, help_text='Start time of the period'),
        ),
        migrations.AlterField(
            model_name='room',
            name='capacity',
            field=models.IntegerField(help_text='Maximum number of students that can be accommodated', validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='room',
            name='description',
            field=models.TextField(blank=True, help_text="Optional description of the room's features and equipment"),
        ),
        migrations.AlterField(
            model_name='room',
            name='is_art_room',
            field=models.BooleanField(db_index=True, default=False, help_text='Whether this room is equipped for art classes'),
        ),
        migrations.AlterField(
            model_name='room',
            name='is_gym',
            field=models.BooleanField(db_index=True, default=False, help_text='Whether this room is a gymnasium or physical education space'),
        ),
        migrations.AlterField(
            model_name='room',
            name='is_science_lab',
            field=models.BooleanField(db_index=True, default=False, help_text='Whether this room is equipped as a science lab'),
        ),
        migrations.AlterField(
            model_name='room',
            name='name',
            field=models.CharField(db_index=True, help_text='Unique name/number for the room', max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='section',
            name='course',
            field=models.ForeignKey(help_text='The course this section belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='scheduler.course'),
        ),
        migrations.AlterField(
            model_name='section',
            name='name',
            field=models.CharField(db_index=True, help_text='Generated section name (e.g., ENG7-1)', max_length=150, unique=True),
        ),
        migrations.AlterField(
            model_name='section',
            name='period',
            field=models.ForeignKey(blank=True, help_text='Period when this section meets', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sections', to='scheduler.period'),
        ),
        migrations.AlterField(
            model_name='section',
            name='room',
            field=models.ForeignKey(blank=True, help_text='Room where this section meets', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sections', to='scheduler.room'),
        ),
        migrations.AlterField(
            model_name='section',
            name='section_number',
            field=models.IntegerField(help_text='Section number (e.g., 1, 2, 3)', validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AlterField(
            model_name='section',
            name='teacher',
            field=models.ForeignKey(blank=True, help_text='Teacher assigned to this section', limit_choices_to={'role': 'TEACHER'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='taught_sections', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['grade_level', 'name'], name='scheduler_c_grade_l_036de4_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['course_type', 'grade_level'], name='scheduler_c_course__b2e67a_idx'),
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['duration', 'grade_level'], name='scheduler_c_duratio_4dbedb_idx'),
        ),
        migrations.AddIndex(
            model_name='period',
            index=models.Index(fields=['name'], name='scheduler_p_name_e4525c_idx'),
        ),
        migrations.AddIndex(
            model_name='period',
            index=models.Index(fields=['start_time', 'end_time'], name='scheduler_p_start_t_102a85_idx'),
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['name'], name='scheduler_r_name_9446ae_idx'),
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['is_science_lab'], name='scheduler_r_is_scie_fae0cd_idx'),
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['is_art_room'], name='scheduler_r_is_art__06d2e6_idx'),
        ),
        migrations.AddIndex(
            model_name='room',
            index=models.Index(fields=['is_gym'], name='scheduler_r_is_gym_a5707d_idx'),
        ),
        migrations.AddIndex(
            model_name='section',
            index=models.Index(fields=['course', 'section_number'], name='scheduler_s_course__087703_idx'),
        ),
        migrations.AddIndex(
            model_name='section',
            index=models.Index(fields=['teacher', 'period'], name='scheduler_s_teacher_41f3f3_idx'),
        ),
        migrations.AddIndex(
            model_name='section',
            index=models.Index(fields=['room', 'period'], name='scheduler_s_room_id_daa5ef_idx'),
        ),
        migrations.AddConstraint(
            model_name='course',
            constraint=models.CheckConstraint(check=models.Q(('grade_level__gte', 6), ('grade_level__lte', 12)), name='valid_grade_level'),
        ),
        migrations.AddConstraint(
            model_name='course',
            constraint=models.CheckConstraint(check=models.Q(('max_students_per_section__gte', 1)), name='valid_max_students'),
        ),
        migrations.AddConstraint(
            model_name='course',
            constraint=models.CheckConstraint(check=models.Q(('num_sections__gte', 1)), name='valid_num_sections'),
        ),
        migrations.AddConstraint(
            model_name='room',
            constraint=models.CheckConstraint(check=models.Q(('capacity__gte', 1)), name='valid_room_capacity'),
        ),
        migrations.AddConstraint(
            model_name='section',
            constraint=models.CheckConstraint(check=models.Q(('section_number__gte', 1)), name='valid_section_number'),
        ),
        migrations.AddField(
            model_name='studentpreference',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduler.course'),
        ),
        migrations.AddField(
            model_name='studentpreference',
            name='student',
            field=models.ForeignKey(limit_choices_to={'role': 'STUDENT'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='schedule',
            name='configuration',
            field=models.ForeignKey(blank=True, help_text='Configuration settings used for this schedule', null=True, on_delete=django.db.models.deletion.SET_NULL, to='scheduler.schedulingconfiguration'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduler.course'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduler.period'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheduler.room'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='students',
            field=models.ManyToManyField(limit_choices_to={'role': 'STUDENT'}, related_name='schedules', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='studentpreference',
            unique_together={('student', 'course', 'semester', 'year')},
        ),
        migrations.AddConstraint(
            model_name='schedule',
            constraint=models.UniqueConstraint(fields=('room', 'period', 'semester', 'year'), name='unique_room_period'),
        ),
        migrations.AddConstraint(
            model_name='schedule',
            constraint=models.UniqueConstraint(fields=('course', 'period', 'semester', 'year'), name='unique_course_period'),
        ),
    ]
