# Generated by Django 4.2.20 on 2025-03-11 20:35

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('scheduler', '0007_schedulingconfiguration_respect_separation_groups_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='RoomConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('active', models.BooleanField(default=False)),
                ('prioritize_specialized_rooms', models.BooleanField(default=True, help_text='Prioritize assigning specialized rooms (labs, art rooms, etc.) to relevant courses')),
                ('allow_room_sharing', models.BooleanField(default=False, help_text='Allow multiple classes to share a room if capacity permits')),
                ('max_room_utilization', models.IntegerField(default=90, help_text='Maximum percentage of room capacity to utilize', validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(100)])),
            ],
            options={
                'verbose_name': 'Room Configuration',
                'verbose_name_plural': 'Room Configurations',
            },
        ),
        migrations.CreateModel(
            name='StudentConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('active', models.BooleanField(default=False)),
                ('max_class_size', models.IntegerField(default=30, help_text='Maximum number of students per class', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
                ('respect_student_preferences', models.BooleanField(default=True, help_text='Try to honor student course preferences when possible')),
                ('enforce_grade_levels', models.BooleanField(default=True, help_text='Strictly enforce grade level requirements for courses')),
                ('respect_separation_groups', models.BooleanField(default=True, help_text='Try to keep students in separation groups in different classes')),
                ('keep_siblings_together', models.BooleanField(default=False, help_text='Try to schedule siblings in the same periods when possible')),
            ],
            options={
                'verbose_name': 'Student Configuration',
                'verbose_name_plural': 'Student Configurations',
            },
        ),
        migrations.CreateModel(
            name='TeacherConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('active', models.BooleanField(default=False)),
                ('max_consecutive_periods', models.IntegerField(default=4, help_text='Maximum number of consecutive periods a teacher can be scheduled', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(8)])),
                ('min_prep_periods', models.IntegerField(default=1, help_text='Minimum number of preparation periods per day', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4)])),
                ('respect_subject_preferences', models.BooleanField(default=True, help_text='Try to assign teachers to their preferred subjects')),
            ],
            options={
                'verbose_name': 'Teacher Configuration',
                'verbose_name_plural': 'Teacher Configurations',
            },
        ),
        migrations.DeleteModel(
            name='SchedulingConfiguration',
        ),
        migrations.AlterModelOptions(
            name='period',
            options={'ordering': ['start_time']},
        ),
        migrations.AlterModelOptions(
            name='room',
            options={'ordering': ['name']},
        ),
        migrations.AlterModelOptions(
            name='siblinggroup',
            options={'ordering': ['name'], 'verbose_name': 'Sibling Group', 'verbose_name_plural': 'Sibling Groups'},
        ),
        migrations.AlterModelOptions(
            name='studentpreference',
            options={'ordering': ['student', 'preference_level']},
        ),
        migrations.AddField(
            model_name='room',
            name='is_art_room',
            field=models.BooleanField(default=False, help_text='Whether this room is equipped for art classes'),
        ),
        migrations.AddField(
            model_name='room',
            name='is_gym',
            field=models.BooleanField(default=False, help_text='Whether this room is a gymnasium or physical education space'),
        ),
        migrations.AddField(
            model_name='room',
            name='is_science_lab',
            field=models.BooleanField(default=False, help_text='Whether this room is equipped as a science lab'),
        ),
        migrations.AlterField(
            model_name='course',
            name='teacher',
            field=models.ForeignKey(limit_choices_to={'role': 'TEACHER'}, on_delete=django.db.models.deletion.CASCADE, related_name='taught_courses', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='studentseparationgroup',
            name='name',
            field=models.CharField(help_text="Name for this separation group (e.g., 'Behavior Group A')", max_length=100),
        ),
        migrations.AlterField(
            model_name='studentseparationgroup',
            name='priority',
            field=models.IntegerField(choices=[(5, 'Highest Priority - Must be separated'), (4, 'High Priority'), (3, 'Medium Priority'), (2, 'Low Priority'), (1, 'Lowest Priority - Try to separate if possible')], default=3, help_text='Priority level for keeping these students separated'),
        ),
        migrations.AlterField(
            model_name='user',
            name='grade_level',
            field=models.IntegerField(blank=True, help_text='Grade level (for students only)', null=True),
        ),
        migrations.AddConstraint(
            model_name='schedule',
            constraint=models.UniqueConstraint(fields=('course', 'period', 'semester', 'year'), name='unique_course_period'),
        ),
    ]
